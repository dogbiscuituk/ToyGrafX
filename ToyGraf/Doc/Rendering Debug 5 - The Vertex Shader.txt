/* Vertex Shader */

#version 330 core

layout (location = 0) in vec3 position;
out vec3 colour;

uniform mat4 cameraView;
uniform mat4 projection;
uniform float timeValue;
uniform int traceIndex;
uniform mat4 transform;

void main()
{
 float
  t = timeValue,
  x = position.x,
  y = position.y,
  z = position.z,
  r = 0,
  g = 0,
  b = 0;

 switch (traceIndex)
 {
  case 0:
   z = sqrt(x * x + y * y);
   z = cos(20 * z - 10 * t) * exp(-3 * z);
   r = (x + 1) / 2;
   g = (y + 1) / 2;
   b = clamp(abs(5 * z), 0, 1);
   gl_Position = projection * cameraView * transform * vec4(x, y, z, 1.0);
   colour = vec3(r, g, b);
   break;

  default:
   break;
 }
}